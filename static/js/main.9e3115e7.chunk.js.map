{"version":3,"sources":["sorting.js","Fish.js","Bugs.js","BugAndFish.js","App.js","serviceWorker.js","index.js"],"names":["quicksort","arr","lo","hi","length","pivot","part","Math","floor","price","i","j","temp","Fish","props","useState","modal","setModal","formatter","Intl","NumberFormat","mappedFish","fish","map","id","className","key","onClick","expand","name","format","src","process","alt","content","location","time","months","Bugs","mappedBugs","bugs","bug","BugAndFish","mappedAnimals","all","animal","objFishPrices","fishPrices","objBugPrices","bugPrices","objAllPrices","allPrices","App","currFishPrices","currBugPrices","currAllPrices","selected","setSelected","filterValue","setFilterValue","fishes","setFishes","setBugs","bugsAndFish","setBugsAndFish","filteredList","type","value","onChange","e","filter","toLocaleLowerCase","includes","target","handleFilterChange","placeholder","href","rel","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","rootElement","document","getElementById","hasChildNodes","hydrate","render","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e3115e7.chunk.js","sourcesContent":["export default function quicksort(arr, lo = 0, hi=null) {\n    if (hi === null) {\n      hi = arr.length - 1\n    }\n    if (lo < hi) {\n      let pivot = part(arr, lo, hi)\n      quicksort(arr, lo, pivot)\n      quicksort(arr, pivot + 1, hi)\n    }\n    return arr;\n}\n  \n  function part(arr, lo, hi) {\n    var pivot = arr[Math.floor(lo + (hi - lo) / 2)].price;\n    var i = lo - 1\n    var j = hi + 1\n    while (true) {\n      do {\n        i++\n      } while (arr[i].price < pivot)\n      do {\n        j--\n      } while (arr[j].price > pivot) \n      if (i >= j) {\n        return j\n      }\n      let temp = arr[i]\n      arr[i] = arr[j]\n      arr[j] = temp\n    }\n}","import React, { useState } from 'react';\n\nexport default function Fish(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n    \n    let mappedFish = props.fish.map( (fish, id) => <div className=\"animal\" key={id} onClick={() => expand(fish)}>{fish.name} <p className=\"prices\">{formatter.format(fish.price)}<img className=\"bells-img\" src={process.env.PUBLIC_URL + \"/images/BellIcon.png\"} alt=\"bell icon\" /></p></div> );\n\n    let expand = (fish) => {\n        let content = (\n        <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + fish.name + '.png'} alt={fish[0]} />\n                    <h1>{fish.name}</h1>\n                    <hr />\n                    <h3>Swims around the {fish.location}</h3>\n                    <h3>Sells for {formatter.format(fish.price)} bells</h3>\n                    <h3>{fish.time}</h3>\n                    <h3>{fish.months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n    \n    return (\n        <div className=\"price-list\">\n            {mappedFish}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function Bugs(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n\n    let mappedBugs = props.bugs.map( (bug, id) => <div className=\"animal\" key={id} onClick={() => expand(bug)}>{bug.name} <p className=\"prices\">{formatter.format(bug.price)}<img className=\"bells-img\" src={process.env.PUBLIC_URL + \"/images/BellIcon.png\"} alt=\"bell icon\" /></p></div>);\n\n    let expand = (bug) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + bug.name + '.png'} alt={bug[0]} />\n                    <h1>{bug.name}</h1>\n                    <hr />\n                    <h3>{bug.location}</h3>\n                    <h3>Sells for {formatter.format(bug.price)} bells</h3>\n                    <h3>{bug.time}</h3>\n                    <h3>{bug.months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            {mappedBugs}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function BugAndFish(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n\n    let mappedAnimals = props.all.map( (animal, id) => <div className=\"animal\" key={id} onClick={() => expand(animal)}>{animal.name} <p className=\"prices\">{formatter.format(animal.price)}<img className=\"bells-img\" src={process.env.PUBLIC_URL + \"/images/BellIcon.png\"} alt=\"bell icon\" /></p></div> );\n\n    let expand = (animal) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + animal.name + '.png'} alt={animal[0]}/>\n                    <h1>{animal.name}</h1>\n                    <hr className=\"modal-hr\" />\n                    <h3>{animal.location}</h3>\n                    <h3>Sells for {formatter.format(animal.price)} bells</h3>\n                    <h3>{animal.time}</h3>\n                    <h3>{animal.months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            {mappedAnimals}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport quicksort from './sorting';\nimport fishPrices from './assets/fish.json';\nimport bugPrices from './assets/bugs.json';\nimport allPrices from './assets/allAnimals.json';\nimport Fish from './Fish';\nimport Bugs from './Bugs';\nimport BugAndFish from './BugAndFish';\nimport './App.css';\n\nconst objFishPrices = [...fishPrices];\nconst objBugPrices = [...bugPrices];\nconst objAllPrices = [...allPrices];\nexport default function App() {\n  let currFishPrices = fishPrices;\n  let currBugPrices = bugPrices;\n  let currAllPrices = allPrices;\n\n  const [selected, setSelected] = useState('AllPrices');\n  const [filterValue, setFilterValue] = useState('');\n  const [fishes, setFishes] = useState(fishPrices); // Fish to show \n  const [bugs, setBugs] = useState(objBugPrices);  // Bugs to show\n  const [bugsAndFish, setBugsAndFish] = useState(objAllPrices); // All to show\n\n  // For sorting by price rather than name\n  let sortByPrice = () => {\n    if (selected === 'AllPrices') {\n      currAllPrices = quicksort(allPrices)\n      setBugsAndFish(currAllPrices);\n    } else if (selected === 'Fish') {\n      currFishPrices = quicksort(fishPrices)\n      setFishes(currFishPrices)\n    } else if (selected === 'Bugs') {\n      currBugPrices = quicksort(bugPrices)\n      setBugs(currBugPrices)\n    }\n  }\n  // For sorting by name rather than price\n  let sortByName = () => {\n    if (selected === 'AllPrices') {\n      setBugsAndFish(objAllPrices);\n    } else if (selected === 'Fish') {\n      setFishes(objFishPrices);\n    } else if (selected === 'Bugs') {\n      setBugs(objBugPrices);\n    }\n  }\n\n  let filteredList = \"\";\n  let handleFilterChange = (e) => {\n    if (selected === \"AllPrices\") { // Set the props for the thing to render to the filtered list\n      filteredList = currAllPrices.filter(animal => animal.name.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } else if (selected === \"Fish\") {\n      filteredList = currFishPrices.filter(fish => fish.name.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setFishes(filteredList);\n    } else if (selected === \"Bugs\") {\n      filteredList = currBugPrices.filter(bug => bug.name.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugs(filteredList);\n    } \n    setFilterValue(e.target.value);\n  }\n\n    // To display the correct content\n    let content;\n    switch(selected) {\n      case 'Fish':\n        content = (<Fish fish={fishes} />);\n        break;\n      case 'Bugs':\n        content = (<Bugs bugs={bugs} />);\n        break;\n      case 'AllPrices':\n        content = (<BugAndFish all={bugsAndFish} />);\n        break;\n      default:\n        content = (<BugAndFish all={bugsAndFish} />);\n    }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Animal Crossing New Horizons Prices</h1>\n      <hr className=\"header-hr\" />\n      <header>\n        <div className={selected === \"Fish\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => { setSelected('Fish'); setFilterValue(''); }}>Fish</div>\n        <div className={selected === \"AllPrices\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => { setSelected('AllPrices'); setFilterValue(''); }}>All Prices</div>\n        <div className={selected === \"Bugs\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => { setSelected('Bugs'); setFilterValue(''); }}>Bugs</div>\n      </header>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input type=\"text\" value={filterValue} onChange={(e) => handleFilterChange(e)} className=\"searchTerm\" placeholder=\"Search Here\" />\n          <button type=\"submit\" className=\"searchButton\" onClick={() => setFilterValue('')}>\n            X\n          </button>\n        </div>\n      <div className=\"list-top\"><button className=\"sort-button\" onClick={() => { sortByName(); setFilterValue('') }}>Name</button> <button className=\"sort-button\" onClick={() => { sortByPrice(); setFilterValue('') }}>Price</button></div>\n      </div>\n      {content}\n      <hr className=\"header-hr\" />\n      <footer><p>Social Links</p><p>ACNH PRICES ©2020</p><p>Created By: <a href=\"https://github.com/Brandon205\" rel=\"noopener noreferrer\" >brandon205</a></p></footer>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { hydrate, render } from \"react-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n \nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}