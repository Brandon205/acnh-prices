{"version":3,"sources":["Display.js","YourList.js","App.js","serviceWorker.js","index.js"],"names":["Display","props","ls","useState","modal","setModal","display","setDisplay","formatter","Intl","NumberFormat","localStorage","getItem","length","useEffect","list","mappedAnimals","map","animal","id","className","key","onClick","expand","name","location","format","price","src","process","alt","content","includes","currStorage","split","push","setItem","setFavorite","splice","indexOf","i","removeFavorite","time","months","YourList","displayArr","forEach","allPrices","some","item","yours","objMiscPrices","miscPrices","objAllPrices","App","currAllPrices","currMiscPrices","selected","setSelected","filterValue","setFilterValue","filterby","setFilterby","miscs","setMiscs","bugsAndFish","setBugsAndFish","filteredList","regexNorth","regexSouth","handleFilterChange","e","filter","toLocaleLowerCase","target","value","toString","startsWith","match","all","type","onChange","placeholder","htmlFor","defaultValue","href","rel","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f165603.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Display(props) {\n    const [modal, setModal] = useState('');\n    const [display, setDisplay] = useState([]);\n    var formatter = new Intl.NumberFormat();\n    let ls;\n    if (localStorage.getItem('animals') === null || localStorage.getItem('animals').length === 0) { // For knowing what animals are favorited on the allAnimals page\n        ls = [];\n    } else {\n        ls = localStorage.getItem('animals');\n    }\n\n    useEffect( () => {\n        setDisplay(props.list)\n    }, [props.list]);\n\n    let setFavorite = (name) => {\n        let currStorage;\n        if (localStorage.getItem('animals') === null) {\n            currStorage = [];\n        } else {\n            currStorage = localStorage.getItem('animals').split(',') || [];\n        }\n        currStorage.push(name)\n        localStorage.setItem('animals', currStorage);\n    }\n\n    let removeFavorite = (name) => {\n        let ls = localStorage.getItem('animals').split(',');\n        ls.splice(ls.indexOf(name), 1);\n        localStorage.setItem('animals', ls);\n        for (let i = 0; i < display.length; i++) {\n            if (display[i].name === name) {\n                display.splice(i, 1);\n            }\n        }\n    }\n\n    let mappedAnimals = display.map( (animal, id) => \n    <div className=\"animal\" key={id} onClick={() => expand(animal)}>\n        <>\n            <p className=\"animal-name\">{animal.name}</p>\n        </>\n        <hr className=\"modal-hr\" />\n        <>\n            <p className=\"prices\">{animal.location}</p>\n            <p className=\"prices\">{formatter.format(animal.price)}<img className=\"bells-img\" src={process.env.PUBLIC_URL + \"/images/BellIcon.png\"} alt=\"bell icon\" /></p>\n        </>\n    </div> );\n\n    let expand = (animal) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + animal.name + '.png'} alt={animal[0]}/>\n                    <h1>{animal.name}</h1>\n                    {(!ls.includes(animal.name)) ? <button className=\"favorite\" onClick={() => setFavorite(animal.name)}>+ Add to Your List</button> : ''}\n                    {ls.includes(animal.name) ? <button className=\"favorite\" onClick={() => { removeFavorite(animal.name) }}>- Remove from Your List</button> : ''}\n                    <hr className=\"modal-hr\" />\n                    <h3>{animal.location}</h3>\n                    <h3>Sells for {formatter.format(animal.price)} bells</h3>\n                    <h3>{animal.time ? animal.time : ''}</h3>\n                    <h3>{animal.months ? animal.months : ''}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            {mappedAnimals}\n            {modal}\n        </div>\n    )\n}","import React from 'react';\nimport Display from './Display';\nimport allPrices from './assets/allAnimals.json';\n\nexport default function YourList() {\n\n    let content = '';\n    let displayArr = [];\n    if (localStorage.getItem('animals') === null || localStorage.getItem('animals').length === 0) { // If there are favorited animals then it should loop through them\n        content = (<div className=\"no-animals\"><h1>You haven't added any animals to your list!</h1><h3>To do that all you need to do is hit the + sign on the animals info panel.</h3></div>)\n    } else { // For each animal in LS it should check to see if thats an animal in the JSON file, if so add all that animals info to the display array to be displayed later\n        let ls = localStorage.getItem('animals').split(',');\n        ls.forEach(animal => {\n            allPrices.some(item => {\n                if (item.name === animal) {\n                    displayArr.push(item)\n                    return true;\n                }\n                return false;\n            });\n        })\n    };\n\n    return (\n        <>\n            {content}\n            <Display list={displayArr} yours={true} />\n        </>\n    )\n}","import React, { useState } from 'react';\nimport miscPrices from './assets/misc.json';\nimport allPrices from './assets/allAnimals.json';\nimport YourList from './YourList';\nimport Display from './Display';\nimport './App.css';\n\nconst objMiscPrices = [...miscPrices];\nconst objAllPrices = [...allPrices];\nexport default function App() {\n  let currAllPrices = allPrices;\n  let currMiscPrices = miscPrices;\n\n  const [selected, setSelected] = useState('AllPrices');\n  const [filterValue, setFilterValue] = useState('');\n  const [filterby, setFilterby] = useState('name');\n  const [miscs, setMiscs] = useState(objMiscPrices);\n  const [bugsAndFish, setBugsAndFish] = useState(objAllPrices); // Animals to show\n\n  let filteredList = \"\";\n  let regexNorth = /(.+(,)|(Year-Round))/g;\n  let regexSouth = /((\\s).+|(Year-Round))/g;\n  let handleFilterChange = (e) => { // Handles the filtering of all of the items \n    if (selected === \"AllPrices\" && filterby === 'name') { \n      filteredList = currAllPrices.filter(animal => animal.name.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } else if (selected === \"Misc\" && filterby === 'name') {\n      filteredList = currMiscPrices.filter(item => item.name.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setMiscs(filteredList);\n    }\n    if (selected === \"AllPrices\" && filterby === 'price') { \n      filteredList = currAllPrices.filter(animal => animal.price.toString().startsWith(e.target.value));\n      setBugsAndFish(filteredList);\n    } else if (selected === \"Misc\" && filterby === 'price') {\n      filteredList = currMiscPrices.filter(item => item.price.toString().startsWith(e.target.value));\n      setMiscs(filteredList);\n    } \n    if (selected === \"AllPrices\" && filterby === 'location') { \n      filteredList = currAllPrices.filter(animal => animal.location.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } else if (selected === \"Misc\" && filterby === 'location') {\n      filteredList = currMiscPrices.filter(item => item.location.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setMiscs(filteredList);\n    } \n    if (selected === \"AllPrices\" && filterby === 'northDate') { \n      filteredList = currAllPrices.filter(animal => animal.months.match(regexNorth)[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } \n    if (selected === \"AllPrices\" && filterby === 'southDate') { \n      filteredList = currAllPrices.filter(animal => animal.months.match(regexSouth)[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } \n    setFilterValue(e.target.value);\n  }\n\n    // To display the correct content\n    let content;\n    switch(selected) {\n      case 'AllPrices':\n        content = (<Display list={bugsAndFish} all={true} />);\n        break;\n      case 'YourList':\n        content = (<YourList />)\n        break;\n      case 'Misc':\n        content = (<Display list={miscs} />);\n        break;\n      default:\n        content = (<Display list={bugsAndFish} />);\n    }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Animal Crossing New Horizons Prices</h1>\n      <hr className=\"header-hr\" />\n      <header>\n        <div className={selected === \"AllPrices\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => { setSelected('AllPrices'); setFilterValue(''); }}>Bugs and Fish</div>\n        <div className={selected === \"YourList\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => { setSelected('YourList'); setFilterValue(''); }}>Saved List</div>\n        <div className={selected === \"Misc\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => { setSelected('Misc'); setFilterValue(''); }}>Misc Prices</div>\n      </header>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input type=\"text\" value={filterValue} onChange={(e) => handleFilterChange(e)} className=\"searchTerm\" placeholder=\"Search Here\" />\n          <button type=\"submit\" className=\"searchButton\" onClick={(e) => { setFilterValue(''); handleFilterChange(e); } }>\n            X\n          </button>\n        </div>\n      <div className=\"list-top\">\n        <label htmlFor=\"filter\">Search Filter:</label>\n        <select name=\"filters\" id=\"filter\" onChange={(e) => setFilterby(e.target.value)}>\n          <option value=\"name\" defaultValue>Name</option>\n          <option value=\"price\">Price</option>\n          <option value=\"location\">Location</option>\n          {selected === \"Misc\" ? '' : <option value=\"northDate\">Dates (Northern)</option>}\n          {selected ===\"Misc\" ? '' : <option value=\"southDate\">Dates (Southern)</option>}\n        </select>\n      </div>\n      </div>\n      {content}\n      <hr className=\"header-hr\" />\n      <footer>\n        <div>\n          <div className=\"icons\"><a href=\"https://twitter.com/brandonblack02\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-twitter\"></i></a><a href=\"https://www.linkedin.com/in/brandonblack02/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin\"></i></a><a href=\"https://github.com/Brandon205\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github-square social-icons\"></i></a></div>  \n        </div>\n        <p>ACNH PRICES ©2020</p>\n        <p>Created By: <a href=\"https://github.com/Brandon205\" rel=\"noopener noreferrer\" target=\"_blank\">brandon205</a></p>\n      </footer>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}