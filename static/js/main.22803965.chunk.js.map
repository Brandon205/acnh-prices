{"version":3,"sources":["Fish.js","Bugs.js","BugAndFish.js","App.js","serviceWorker.js","index.js"],"names":["Fish","props","useState","modal","setModal","formatter","Intl","NumberFormat","mappedFish","fish","map","id","className","key","onClick","expand","format","price","content","src","process","alt","location","time","months","Bugs","mappedBugs","bugs","bug","BugAndFish","mappedAnimals","all","animal","App","objFishPrices","Object","entries","fishPrices","objBugPrices","bugPrices","objAllPrices","allPrices","selected","setSelected","filterValue","setFilterValue","fishes","setFishes","setBugs","bugsAndFish","setBugsAndFish","filteredList","type","value","onChange","e","filter","toLocaleLowerCase","includes","target","handleFilterChange","placeholder","class","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22803965.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Fish(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n    \n    let mappedFish = props.fish.map( (fish, id) => <div className=\"animal\" key={id} onClick={() => expand(fish)}>{fish[0]} <p className=\"prices\">{formatter.format(fish[1].price)}</p></div> );\n\n    let expand = (fish) => {\n        let content = (\n        <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + fish[0] + '.png'} alt={fish[0]} />\n                    <h1>{fish[0]}</h1>\n                    <hr />\n                    <h3>Swims around the {fish[1].location}</h3>\n                    <h3>Sells for {formatter.format(fish[1].price)} bells</h3>\n                    <h3>{fish[1].time}</h3>\n                    <h3>{fish[1].months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n    \n    return (\n        <div className=\"price-list\">\n            <h1>ACNH Fish:</h1>\n            {mappedFish}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function Bugs(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n\n    let mappedBugs = props.bugs.map( (bug, id) => <div className=\"animal\" key={id} onClick={() => expand(bug)}>{bug[0]} <p className=\"prices\">{bug[1].price === \"N/A\" ? bug[1].price : formatter.format(bug[1].price)}</p> </div>);\n\n    let expand = (bug) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + bug[0] + '.png'} alt={bug[0]} />\n                    <h1>{bug[0]}</h1>\n                    <hr />\n                    <h3>{bug[1].location}</h3>\n                    <h3>Sells for {bug[1].price === \"N/A\" ? bug[1].price : formatter.format(bug[1].price)} bells</h3>\n                    <h3>{bug[1].time}</h3>\n                    <h3>{bug[1].months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            <h1>ACNH Bugs:</h1>\n            {mappedBugs}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function BugAndFish(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n\n    let mappedAnimals = props.all.map( (animal, id) => <div className=\"animal\" key={id} onClick={() => expand(animal)}>{animal[0]} <p className=\"prices\">{animal[1].price}</p></div> );\n\n    let expand = (animal) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + animal[0] + '.png'} alt={animal[0]}/>\n                    <h1>{animal[0]}</h1>\n                    <hr />\n                    <h3>{animal[1].location}</h3>\n                    <h3>Sells for {animal[1].price === \"N/A\" ? animal[1].price : formatter.format(animal[1].price)} bells</h3>\n                    <h3>{animal[1].time}</h3>\n                    <h3>{animal[1].months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            <h1>All ACNH Animals: </h1>\n            {mappedAnimals}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport fishPrices from './assets/fish.json';\nimport bugPrices from './assets/bugs.json';\nimport allPrices from './assets/allAnimals.json';\nimport Fish from './Fish';\nimport Bugs from './Bugs';\nimport BugAndFish from './BugAndFish';\nimport './App.css';\n\nexport default function App() {\n  let objFishPrices = Object.entries(fishPrices);\n  let objBugPrices = Object.entries(bugPrices);\n  let objAllPrices = Object.entries(allPrices);\n\n  const [selected, setSelected] = useState('AllPrices');\n  const [filterValue, setFilterValue] = useState('');\n  const [fishes, setFishes] = useState(objFishPrices); // Fishes to show \n  const [bugs, setBugs] = useState(objBugPrices);  // Bugs to show\n  const [bugsAndFish, setBugsAndFish] = useState(objAllPrices); // All to show\n\n  let content;\n  switch(selected) {\n    case 'Fish':\n      content = (<Fish fish={fishes} />);\n      break;\n    case 'Bugs':\n      content = (<Bugs bugs={bugs} />);\n      break;\n    case 'AllPrices':\n      content = (<BugAndFish all={bugsAndFish} />);\n      break;\n    default:\n      content = (<BugAndFish all={bugsAndFish} />);\n  }\n\n  let filteredList = \"\";\n  let handleFilterChange = (e) => {\n    if (selected === \"AllPrices\") { // Set the props for the thing to render to the filtered list\n      filteredList = objAllPrices.filter(animal => animal[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } else if (selected === \"Fish\") {\n      filteredList = objFishPrices.filter(fish => fish[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setFishes(filteredList);\n    } else if (selected === \"Bugs\") {\n      filteredList = objBugPrices.filter(bug => bug[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugs(filteredList);\n    }\n    setFilterValue(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Animal Crossing New Horizons Sell Guide</h1>\n      <header>\n        <div className={selected === \"Fish\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => setSelected('Fish')}>Fish</div>\n        <div className={selected === \"AllPrices\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => setSelected('AllPrices')}>All Prices</div>\n        <div className={selected === \"Bugs\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => setSelected('Bugs')}>Bugs</div>\n      </header>\n      {/* <div className=\"search\">\n        <label htmlFor=\"searchbar\" style={{display: 'none'}}>Search</label>\n        <input name=\"searchbar\" value={filterValue} onChange={(e) => handleFilterChange(e)} placeholder=\"Search Here\" />\n      </div> */}\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input type=\"text\" value={filterValue} onChange={(e) => handleFilterChange(e)} className=\"searchTerm\" placeholder=\"Search Here\" />\n          <button type=\"submit\" class=\"searchButton\">\n            >>\n          </button>\n        </div>\n      </div>\n      {content}\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}