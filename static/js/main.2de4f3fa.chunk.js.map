{"version":3,"sources":["sorting.js","Fish.js","Bugs.js","BugAndFish.js","App.js","serviceWorker.js","index.js"],"names":["quicksort","arr","lo","hi","length","pivot","part","Math","floor","price","i","j","temp","Fish","props","useState","modal","setModal","formatter","Intl","NumberFormat","mappedFish","fish","map","id","className","key","onClick","expand","format","content","src","process","alt","location","time","months","Bugs","mappedBugs","bugs","bug","BugAndFish","mappedAnimals","all","animal","App","currFishPrices","currBugPrices","currAllPrices","objFishPrices","Object","entries","fishPrices","objBugPrices","bugPrices","objAllPrices","allPrices","selected","setSelected","filterValue","setFilterValue","fishes","setFishes","setBugs","bugsAndFish","setBugsAndFish","filteredList","type","value","onChange","e","filter","toLocaleLowerCase","includes","target","handleFilterChange","placeholder","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","rootElement","document","getElementById","hasChildNodes","hydrate","render","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2de4f3fa.chunk.js","sourcesContent":["export default function quicksort(arr, lo = 0, hi=null) {\n    if (hi === null) {\n      hi = arr.length - 1\n    }\n    if (lo < hi) {\n      let pivot = part(arr, lo, hi)\n      quicksort(arr, lo, pivot)\n      quicksort(arr, pivot + 1, hi)\n    }\n    return arr;\n}\n  \n  function part(arr, lo, hi) {\n    var pivot = arr[Math.floor(lo + (hi - lo) / 2)][1].price;\n    var i = lo - 1\n    var j = hi + 1\n    while (true) {\n      do {\n        i++\n      } while (arr[i][1].price < pivot)\n      do {\n        j--\n      } while (arr[j][1].price > pivot) \n      if (i >= j) {\n        return j\n      }\n      let temp = arr[i]\n      arr[i] = arr[j]\n      arr[j] = temp\n    }\n}","import React, { useState } from 'react';\n\nexport default function Fish(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n    \n    let mappedFish = props.fish.map( (fish, id) => <div className=\"animal\" key={id} onClick={() => expand(fish)}>{fish[0]} <p className=\"prices\">{formatter.format(fish[1].price)}</p></div> );\n\n    let expand = (fish) => {\n        let content = (\n        <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + fish[0] + '.png'} alt={fish[0]} />\n                    <h1>{fish[0]}</h1>\n                    <hr />\n                    <h3>Swims around the {fish[1].location}</h3>\n                    <h3>Sells for {formatter.format(fish[1].price)} bells</h3>\n                    <h3>{fish[1].time}</h3>\n                    <h3>{fish[1].months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n    \n    return (\n        <div className=\"price-list\">\n            {mappedFish}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function Bugs(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n\n    let mappedBugs = props.bugs.map( (bug, id) => <div className=\"animal\" key={id} onClick={() => expand(bug)}>{bug[0]} <p className=\"prices\">{formatter.format(bug[1].price)}</p> </div>);\n\n    let expand = (bug) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + bug[0] + '.png'} alt={bug[0]} />\n                    <h1>{bug[0]}</h1>\n                    <hr />\n                    <h3>{bug[1].location}</h3>\n                    <h3>Sells for {formatter.format(bug[1].price)} bells</h3>\n                    <h3>{bug[1].time}</h3>\n                    <h3>{bug[1].months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            {mappedBugs}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function BugAndFish(props) {\n    const [modal, setModal] = useState('');\n    var formatter = new Intl.NumberFormat();\n\n    let mappedAnimals = props.all.map( (animal, id) => <div className=\"animal\" key={id} onClick={() => expand(animal)}>{animal[0]} <p className=\"prices\">{formatter.format(animal[1].price)}</p></div> );\n\n    let expand = (animal) => {\n        let content = (\n            <div className=\"modal\" onClick={() => setModal('')}>\n                <div className=\"modal-content\">\n                    <img src={process.env.PUBLIC_URL + '/images/' + animal[0] + '.png'} alt={animal[0]}/>\n                    <h1>{animal[0]}</h1>\n                    <hr />\n                    <h3>{animal[1].location}</h3>\n                    <h3>Sells for {formatter.format(animal[1].price)} bells</h3>\n                    <h3>{animal[1].time}</h3>\n                    <h3>{animal[1].months}</h3>\n                    <i>N - Northern Hemishpere, S - Southern Hemishpere</i>\n                </div>\n            </div>\n        )\n        setModal(content);\n    }\n\n    return (\n        <div className=\"price-list\">\n            {mappedAnimals}\n            {modal}\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport quicksort from './sorting';\nimport fishPrices from './assets/fish.json';\nimport bugPrices from './assets/bugs.json';\nimport allPrices from './assets/allAnimals.json';\nimport Fish from './Fish';\nimport Bugs from './Bugs';\nimport BugAndFish from './BugAndFish';\nimport './App.css';\n\nexport default function App() {\n  const objFishPrices = Object.entries(fishPrices);\n  const objBugPrices = Object.entries(bugPrices);\n  const objAllPrices = Object.entries(allPrices);\n  let currFishPrices;\n  let currBugPrices;\n  let currAllPrices;\n\n  const [selected, setSelected] = useState('AllPrices');\n  const [filterValue, setFilterValue] = useState('');\n  const [fishes, setFishes] = useState(objFishPrices); // Fish to show \n  const [bugs, setBugs] = useState(objBugPrices);  // Bugs to show\n  const [bugsAndFish, setBugsAndFish] = useState(objAllPrices); // All to show\n\n  // To display the correct content\n  let content;\n  switch(selected) {\n    case 'Fish':\n      content = (<Fish fish={fishes} />);\n      break;\n    case 'Bugs':\n      content = (<Bugs bugs={bugs} />);\n      break;\n    case 'AllPrices':\n      content = (<BugAndFish all={bugsAndFish} />);\n      break;\n    default:\n      content = (<BugAndFish all={bugsAndFish} />);\n  }\n\n  // For sorting by price rather than name\n  let sortByPrice = () => {\n    if (selected === 'AllPrices') {\n      currAllPrices = quicksort(objAllPrices)\n      setBugsAndFish(currAllPrices);\n    } else if (selected === 'Fish') {\n      currFishPrices = quicksort(objFishPrices)\n      setFishes(currFishPrices)\n    } else if (selected === 'Bugs') {\n      currBugPrices = quicksort(objBugPrices)\n      setBugs(currBugPrices)\n    }\n  }\n  // For sorting by name rather than price\n  let sortByName = () => {\n    if (selected === 'AllPrices') {\n      setBugsAndFish(objAllPrices);\n    } else if (selected === 'Fish') {\n      setFishes(objFishPrices);\n    } else if (selected === 'Bugs') {\n      setBugs(objBugPrices);\n    }\n  }\n\n  let filteredList = \"\";\n  let handleFilterChange = (e) => {\n    if (selected === \"AllPrices\") { // Set the props for the thing to render to the filtered list\n      filteredList = objAllPrices.filter(animal => animal[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugsAndFish(filteredList);\n    } else if (selected === \"Fish\") {\n      filteredList = objFishPrices.filter(fish => fish[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setFishes(filteredList);\n    } else if (selected === \"Bugs\") {\n      filteredList = objBugPrices.filter(bug => bug[0].toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()));\n      setBugs(filteredList);\n    }\n    setFilterValue(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Animal Crossing New Horizons Sell Guide</h1>\n      <header>\n        <div className={selected === \"Fish\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => setSelected('Fish')}>Fish</div>\n        <div className={selected === \"AllPrices\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => setSelected('AllPrices')}>All Prices</div>\n        <div className={selected === \"Bugs\" ? \"tabs tab-bkg\" : \"tabs\"} onClick={() => setSelected('Bugs')}>Bugs</div>\n      </header>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <input type=\"text\" value={filterValue} onChange={(e) => handleFilterChange(e)} className=\"searchTerm\" placeholder=\"Search Here\" />\n          <button type=\"submit\" className=\"searchButton\">\n            >>\n          </button>\n        </div>\n      <div className=\"list-top\"><button className=\"sort-button\" onClick={() => sortByName()}>Name</button> <button className=\"sort-button\" onClick={() => sortByPrice()}>Price</button></div>\n      </div>\n      {content}\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { hydrate, render } from \"react-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n \nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}